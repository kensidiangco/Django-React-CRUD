{"version":3,"sources":["posts.js","App.js","reportWebVitals.js","index.js"],"names":["posts","id","title","text","postDelete","postUpdate","className","onClick","for","name","App","useState","setTitle","setText","setPosts","active","setActive","editing","setEditing","useEffect","a","axios","result","data","fetchData","getCookie","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","onSubmit","e","preventDefault","csrftoken","url","fetch","method","headers","body","JSON","stringify","then","res","catch","error","console","log","type","placeholder","onChange","event","target","value","required","rows","cols","map","post","updatePost","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ff52f62.chunk.js","sourcesContent":["import React from 'react';\r\nimport './posts.css';\r\n\r\nexport default function posts({id, title, text, postDelete, postUpdate}) {\r\n\r\n\treturn (\r\n\t\t<div className=\"posts\">\r\n\t\t\t<div key={id} className=\"post__card\">\r\n\t\t\t\t<div className=\"post__button\">\r\n\t\t\t        <button className=\"deleteButton\" onClick={postDelete}>Delete</button>\r\n\t\t\t        <button className=\"editButton\" onClick={postUpdate}>Edit</button>\r\n\t      \t\t</div>\r\n        \t\t<div className=\"card__header\">\r\n\t\t\t\t\t<label for=\"title\"><small>Title:</small></label>\r\n\t\t\t\t\t<h3 name=\"title\">{title}</h3>\r\n        \t\t</div>\r\n        \t\t<div className=\"card__body\">\r\n        \t\t\t<label for=\"text\"><small>Text:</small></label>\r\n          \t\t\t<p name=\"text\">{text}</p>\r\n        \t\t</div>\r\n      \t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Posts from './posts';\n\nfunction App() {\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [active, setActive] = useState([]);\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n      const fetchData = async () => {\n        const result =  await axios(\"https://django-reactjs-crud.herokuapp.com/api/posts-list/\");\n        setPosts(result.data);\n      };\n    fetchData();\n  }, [posts]);\n\n  const getCookie = (name) => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  const submit = (e) => {\n    e.preventDefault();\n\n    var csrftoken = getCookie('csrftoken');\n    var url = 'https://django-reactjs-crud.herokuapp.com/api/post-create/';\n\n    if(editing === true){\n      url = `https://django-reactjs-crud.herokuapp.com/api/post-update/${active.id}/`;\n      setEditing(false);\n    }\n\n    fetch(url, {\n      method: 'POST',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n      },\n      body:JSON.stringify({title, text})\n    }).then((res) => {\n        setTitle('');\n        setText('');\n    }).catch((error) => {\n      console.log('ERROR:', error);\n    })\n  }\n\n  const postDelete = (post) => {\n\n    var csrftoken = getCookie('csrftoken');\n    fetch(`https://django-reactjs-crud.herokuapp.com/api/post-delete/${post.id}/`, {\n      method: 'DELETE',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n      }\n    })\n  }\n\n  const updatePost = (post) => {\n    setActive(post);\n    setEditing(true);\n    setTitle(post.title);\n    setText(post.text);\n  }\n\n  return (\n    <div id=\"top\" className=\"App\">\n      <div className=\"app__content\">\n        <div className=\"app__header\">\n          <h1>Post app</h1>\n        </div>\n          <div className=\"post__formbase\">\n            <form onSubmit={submit}>\n              <label for=\"title\">Title</label>\n              <input \n                type=\"text\" \n                id=\"title\"\n                name=\"title\" \n                placeholder=\"Title\" \n                onChange={event => setTitle(event.target.value)}\n                value={title}\n                required\n              />\n\n              <label for=\"text\">Text</label>\n              <textarea \n                rows=\"5\" \n                cols=\"25\" \n                id=\"text\"\n                name=\"text\"\n                placeholder=\"Text\"\n                onChange={event => setText(event.target.value)}\n                value={text}\n                required\n              ></textarea>\n              <div className=\"b\">\n                <button className=\"submitButton\" type=\"submit\">Post</button>\n              </div>\n            </form>\n        </div>\n      </div>\n\n      {\n        posts.length === 0 ? (<div className=\"post__header\"><h2>No post.</h2></div>) : (\n        <div className=\"post__header\">\n          <h2>Posts</h2>\n        </div>)\n      }\n      {posts.map(post => (\n        <Posts id={post.id} title={post.title} text={post.text} postDelete={() => postDelete(post)} postUpdate={() => updatePost(post)} />\n      ))}\n\n      <a href=\"#top\" className=\"toTopButton\">UP</a>\n    </div>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}